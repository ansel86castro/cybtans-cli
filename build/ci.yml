# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

name: $(majorMinorPathVersion).$(buildVersion)

# pipeline variables
variables:
  isMain: $[eq(variables['Build.SourceBranch'], 'refs/heads/develop')]
  majorMinorPathVersion: 1.0.16
  # semanticVersion counter is automatically incremented by one in each execution of pipeline
  # second parameter is seed value to reset to every time the referenced majorMinorPathVersion is changed
  buildVersion: $[counter(variables['majorMinorPathVersion'], 1)]

trigger:
  batch: true
  branches:
    include:
      - develop

jobs:
  - job: PR
    displayName: Pull Request Validation
    condition: eq(variables['Build.Reason'], 'PullRequest')
    pool:
      vmImage: "windows-latest"
    steps:
      - task: DotNetCoreCLI@2
        displayName: "Restore Packages"
        inputs:
          command: "restore"
          projects: "**/CybtansCli.sln"
      - task: DotNetCoreCLI@2
        displayName: "Build Solution"
        inputs:
          command: "build"
          projects: "**/CybtansCli.sln"
          arguments: "--configuration $(configuration)"
          versioningScheme: "byBuildNumber"
      - task: DotNetCoreCLI@2
        displayName: "Test Solution"
        inputs:
          command: "test"
          projects: "**/CybtansCli.sln"
          testRunTitle: "Run Tests"

  - job: Publish
    displayName: Publish
    condition: and(ne(variables['Build.Reason'], 'PullRequest'), eq(variables.isMain, true))
    pool:
      vmImage: "windows-latest"
    steps:
      - task: CmdLine@2
        displayName: "Publish Code Generator"
        inputs:
          script: |
            dotnet publish src/Cybtans.Proto.Generator/Cybtans.Proto.Generator.csproj -p:PublishProfile=Winx64 -o Release/x64
            dotnet publish src/Cybtans.Proto.Generator/Cybtans.Proto.Generator.csproj -p:PublishProfile=Portable -o Release/portable

      - task: ArchiveFiles@2
        displayName: "Zip x64"
        inputs:
          rootFolderOrFile: "Release/x64/cybtans-cli.exe"
          includeRootFolder: false
          archiveType: "zip"
          archiveFile: "$(Build.ArtifactStagingDirectory)/x64/cybtans-cli.zip"
          replaceExistingArchive: true
          verbose: true

      - task: ArchiveFiles@2
        displayName: "Zip Portable"
        inputs:
          rootFolderOrFile: "Release/portable"
          includeRootFolder: false
          archiveType: "zip"
          archiveFile: "$(Build.ArtifactStagingDirectory)/portable/cybtans-cli.zip"
          replaceExistingArchive: true
          verbose: true

      - task: AzureFileCopy@4
        displayName: "Upload to Blob Storage"
        inputs:
          SourcePath: "$(Build.ArtifactStagingDirectory)/x64/cybtans-cli.zip"
          azureSubscription: "Evaluación gratuita(e5d99fb9-0a00-4157-8a2f-e79ac9337a57)"
          Destination: "AzureBlob"
          storage: "cybtans"
          ContainerName: "cybtans-cli"
          blobPrefix: "cybtans-cli_x64.zip"

      - task: AzureFileCopy@4
        displayName: "Upload to Blob Storage"
        inputs:
          SourcePath: "$(Build.ArtifactStagingDirectory)/portable/cybtans-cli.zip"
          azureSubscription: "Evaluación gratuita(e5d99fb9-0a00-4157-8a2f-e79ac9337a57)"
          Destination: "AzureBlob"
          storage: "cybtans"
          ContainerName: "cybtans-cli"
          blobPrefix: "cytabs-cli_portable.zip"
